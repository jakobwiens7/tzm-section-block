$black: #000;
$white: #fff;

.wp-block-tzm-section {
	--subtract-height: 0px;

	position: relative;
	min-height: 430px;
	padding: 1em;
	display: flex;
	justify-content: center;
	align-items: center;
	// Prevent the `wp-block-tzm-section__background` span from overflowing the container when border-radius is applied.
	// `overflow: hidden` is provided as a fallback for browsers that don't support `overflow: clip`.
	overflow: hidden;
	// Use clip instead of overflow: hidden so that sticky position works on child elements.
	overflow: clip;
	// This block has customizable padding, border-box makes that more predictable.
	box-sizing: border-box;
	// Keep the flex layout direction to the physical direction (LTR) in RTL languages.
	/*rtl:raw: direction: ltr; */

	/**
	 * Set a default background color for has-background-dim _unless_ it includes another
	 * background-color class (e.g. has-green-background-color). The presence of another
	 * background-color class implies that another style will provide the background color
	 * for the overlay.
	 *
	 * See:
	 *   - Issue with background color specificity: https://github.com/WordPress/gutenberg/issues/26545
	 *   - Issue with alternative fix: https://github.com/WordPress/gutenberg/issues/26545
	 */
	.has-background-dim:not([class*="-background-color"]),
	.has-background-dim.has-background-gradient {
		background-color: transparent;
	}

	&.has-parallax {
		background-attachment: fixed;

		// Mobile Safari does not support fixed background attachment properly.
		// See also https://stackoverflow.com/questions/24154666/background-size-cover-not-working-on-ios
		// Chrome on Android does not appear to support the attachment at all: https://issuetracker.google.com/issues/36908439
		@supports (-webkit-overflow-scrolling: touch) {
			background-attachment: scroll;
		}

		// Remove the appearance of scrolling based on OS-level animation preferences.
		@media (prefers-reduced-motion: reduce) {
			background-attachment: scroll;
		}
	}
	&.is-repeated {
		background-repeat: repeat;
		background-size: auto;
	}

	.wp-block-tzm-section__background {
		position: absolute;
		top: 0;
		left: 0;
		bottom: 0;
		right: 0;
		opacity: 0.5;
	}

	@for $i from 0 through 10 {
		// Keep .wp-block-tzm-section__gradient-background for v8 deprecation
		.wp-block-tzm-section__gradient-background.has-background-dim.has-background-dim-#{ $i * 10 },
		.wp-block-tzm-section__background.has-background-dim.has-background-dim-#{ $i * 10 } {
			opacity: $i * 0.1;
		}
	}

	svg.wp-block-tzm-section__divider-shape {
		position: absolute;
		left: 0px;
		right: 0px;
		pointer-events: none;
		z-index: 1;

		&.is-flipped {
			transform: scaleX(-1);
		}

		&.has-bottom-position {
			bottom: -1px;
		}

		&.has-top-position {
			top: -1px;
			transform: rotate(180deg);

			&.is-flipped {
				transform: rotate(180deg) scaleX(-1);
			}
		}
	}

	&[data-height-selector] {
		min-height: calc(100vh - var(--subtract-height));
	}

	.wp-block-tzm-section-image {
		background-size: cover;
		background-position: center center;
		width: 100%;
	}

	// Using flexbox without an assigned height property breaks vertical center alignment in IE11.
	// Appending an empty ::after element tricks IE11 into giving the section image an implicit height, which sidesteps this issue.
	&::after {
		content: "";
		display: block;
		font-size: 0;
		min-height: inherit;

		// IE doesn't support flex so omit that.
		@supports (position: sticky) {
			content: none;
		}
	}

	.wp-block-tzm-section__inner-container {
		width: 100%;
		color: inherit;
		z-index: 10;
	}

	// Vertical Alignment
	&.is-vertically-aligned-top {
		align-items: flex-start;
		justify-content: center;
	}

	&.is-vertically-aligned-center {
		align-items: center;
		justify-content: center;
	}

	&.is-vertically-aligned-bottom {
		align-items: flex-end;
		justify-content: center;
	}

	> .wp-block-tzm-section__background {
		z-index: 1;
		border-radius: inherit;
	}

	.wp-block-tzm-section__image-background {
		&.is-repeated {
			background-repeat: repeat;
			background-size: auto;
		}
		&.has-parallax-fixed {
			background-attachment: fixed;
		}
	}

	// Extra specificity for in edit mode where other styles would override it otherwise.
	.wp-block-tzm-section__image-background,
	video.wp-block-tzm-section__video-background {
		position: absolute;
		top: 0;
		left: 0;
		right: 0;
		bottom: 0;
		margin: 0;
		padding: 0;
		width: 100%;
		height: 100%;
		max-width: none;
		max-height: none;
		object-fit: cover;
		outline: none;
		border: none;
		box-shadow: none;
	}
}

// If Section block's text color has not been set adjust default color
// based on if overlay is light or not. The following styles leverage
// `:where` to allow for generic global styles that have a low specificity to
// still take precedence.
:where(.wp-block-tzm-section:not(.has-text-color)),
:where(.wp-block-tzm-section-image:not(.has-text-color)) {
	color: $white;
}

:where(.wp-block-tzm-section.is-light:not(.has-text-color)),
:where(.wp-block-tzm-section-image.is-light:not(.has-text-color)) {
	color: $black;
}

:root {
	:where(.wp-block-tzm-section p:not(.has-text-color)),
	:where(.wp-block-tzm-section h1:not(.has-text-color)),
	:where(.wp-block-tzm-section h2:not(.has-text-color)),
	:where(.wp-block-tzm-section h3:not(.has-text-color)),
	:where(.wp-block-tzm-section h4:not(.has-text-color)),
	:where(.wp-block-tzm-section h5:not(.has-text-color)),
	:where(.wp-block-tzm-section h6:not(.has-text-color)) {
		color: inherit;
	}
}

/*.u1-parallax-bg-stage {
	position: relative;
	// prevent margin collapse on inner element
	display: flow-root;
	// needed? else the parallax-element will go behinde everithing with a stackingcontext?
	z-index: 0;
}
@supports not (display: flow-root) {
	// zzz if safari
	.u1-parallax-bg-stage {
		padding: 0.2px;
	}
}*/

parallax-wrapper {
	position: absolute;
	top: 0;
	left: 0;
	right: 0;
	right: -0.4px;
	bottom: -0.3px; /* ugly strange 1px space see demo */
	z-index: -1;
	will-change: transform;
	background-size: cover;

	&.has-parallax-fixed {
		--parallax-bg-speed: 0;
	}
	&.has-parallax-slow {
		--parallax-bg-speed: 0.3;
	}
	&.has-parallax-medium {
		--parallax-bg-speed: 0.7;
	}
	&.has-parallax-fast {
		--parallax-bg-speed: 1.25;
	}
}
