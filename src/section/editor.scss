@import '~@wordpress/base-styles/variables';

.wp-block-tzm-section {
	/* Extra specificity needed because the reset.css applied in the editor context is overriding this rule. */
	.editor-styles-wrapper & {
		box-sizing: border-box;
	}

	&.components-placeholder h2 {
		color: inherit;
	}

	// Applied while media is being uploaded
	&.is-transient::before {
		background-color: #fff;
		opacity: 0.3;
	}

	// Shown while media is being uploaded
	.components-spinner {
		position: absolute;
		z-index: z-index(".wp-block-tzm-section__inner-container");
		top: 50%;
		left: 50%;
		transform: translate(-50%, -50%); // Account for spinner dimensions
		margin: 0;
	}

	.block-editor-block-list__layout {
		width: 100%;
	}

	// The .wp-block-tzm-section class is used just to increase selector specificity.
	.wp-block-tzm-section__inner-container {
		// Avoid text align inherit from section image align.
		text-align: left;
		margin-left: 0;
		margin-right: 0;
	}
}


.tzm-section__reset-button {
	margin-left: auto;
}

.tzm-section__resize-container {
	position: absolute !important;
	top: 0;
	left: 0;
	right: 0;
	bottom: 0;
	min-height: 50px;
}

.tzm-section__resize-container:not(.is-resizing) {
	// Important is used to have higher specificity than the inline style set by re-resizable library.
	height: auto !important;
}

// When uploading background images, show a transparent overlay.
.wp-block-tzm-section > .components-drop-zone .components-drop-zone__content {
	opacity: 0.8 !important;
}

// Remove the parallax fixed background when in the patterns preview panel as it
// doesn't work with the transforms that are applied to resize the block in that context.
.block-editor-block-patterns-list__list-item .has-parallax.wp-block-tzm-section {
	background-attachment: scroll;
}

.block-editor-block-inspector {

	.components-panel__row > .components-base-control {
		width: 100%;
	}
	
	// Shape Divider
	.block-editor-panel-divider {
	
		// Shape preview
		.component-color-indicator {
			width: 32px;
			margin: -4px 4px;	
			border-radius: 0;
		}
	
		// Panel Title
		.components-panel__body-title {
			.divider-flipped.preview:after { transform: scaleX(-1) }
			.indicator-divider-top.preview:after { transform: rotate(180deg) }
			.indicator-divider-top.divider-flipped.preview:after { transform: rotate(180deg) scaleX(-1) }
		}
		
		// Select Control
		.components-custom-select-control {
			margin-bottom: 12px;
			
			> button { width: 100%; }
			
			.components-custom-select-control__item {
				margin: 0;
				border-bottom: 1px solid #ccc;
				
				&:last-child { border-bottom: none; }
			}
			
			.preview {
				&:after {
					z-index: -1;
					opacity: 0.25;
				}
				
				&.is-highlighted {
					background-color: transparent;
					&:after { opacity: 1; }
				}
			}
			&.divider-flipped .preview:after { transform: scaleX(-1) }
			&.control-divider-top-shape .preview:after { transform: rotate(180deg) }
			&.control-divider-top-shape.divider-flipped .preview:after { transform: rotate(180deg) scaleX(-1) }
		}
		
		// Common Shape Preview
		.preview {
			position: relative;
			float: none;

			&:after {
				content: "";
				position: absolute;
				top: 0;
				right: 0;
				bottom: 0;
				left: 0;
			}
		}
		@import "editor-dividers.scss";
	}
}